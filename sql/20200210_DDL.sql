-- 2020-02-10 DDL (table 만들기) 
/* 
==================================================================================================================
<테이블>
: 데이터를 저장하는 공간 (파일)

1. 형식
 - CREATE TABLE table명{
        컬럼명 데이터형 [제약조건],  ==> 제약조건은 여러개 사용 가능. 
            ex) name VARCHAR2(20) NOT NULL CHECK(name IN()) <== 제약조건이 2개 달렸음. 
        컬럼명 데이터형 [제약조건],
        [제약조건]...
   };
 1) table명
 - 30바이트까지 가능. 한글/알파벳으로 시작. 
 - 숫자 사용 가능 (단, 맨 앞 글자에는 사용 불가) 
 - 특수문자 사용 가능. (단, _,$만 사용 가능) 
 - 키워드 사용하지 말 것.
   (ex. SELECT, CREATE, INSERT, FROM, ORDER 등. 오라클에서 파란색으로 표시되는 글자들.) 
 2) 제약조건
   (1) 컬럼 레벨: 컬럼명 뒤에 제약조건 有. ex) NOT NULL
   (2) 테이블 레벨: ex) PRIMARY KEY, FOREIGN KEY, CHECK, UNIQUE
   - 권장사항 : 제약조건마다 이름을 부여해야. (수정, 삭제가 쉽게 하기 위해서.) 

2. 데이터형
 1) 문자: CHAR(1~2,000byte), VARCHAR2(1~4,000byte), CLOB(~4GB)
 2) 숫자: NUMBER(14자리까지), NUMBER(n)(정수), NUMBER(n,m)(실수) 
 3) 날짜: DATE, TIMESTAMP
 4) 기타: BFILE, BLOB

3. 제약조건 ==> 정형화된 데이터 
 1) NOT NULL: NULL을 허용하지 않음. 반드시 입력값이 필요한 경우에 사용. 
    ex) 회원가입 시 *으로 표기된 필수입력값 
 2) UNIQUE: 중복을 허용하지 않음. NULL값 허용함. ex) 전화번호, 이메일 
 3) PRIMARY KEY: 기본 키. NOT NULL + UNIQUE. ★
    - 한 개의 테이블에는 PK를 한 개만 설정 가능. 
    - 예외) 여러개를 만들 수는 있기는 함... 
    ex) ID 중복체크, 사원번호, 게시물 번호 (숫자 자동증가 처리 시키는 애들.)
 4) FOREIGN KEY: 참조 키(외래 키). 
    ex) 사원번호                    부서정보 
         => 부서번호                => 부서번호
         => 게시물 번호 (게시판)      => 게시물 번호 (댓글) 
 5) CHECK: 원하는 값만 사용이 가능하게 만듦. 
    ex) CHECK(sex IN('남','여')): sex의 값은 '남' 또는 '여'만 가능하다.  
        ==> ex) 부서명,학과명 등에 사용. 웹에서 콤보박스로 선택하게 하는 것들.
 6) DEFAULT: 입력값이 없는 경우에 지정된 데이터를 자동으로 넣어줌. 
    ex) 게시물 작성 날짜(오늘 날짜), 게시물 조회수(0) 

4. ALTER: 테이블 수정, 삭제, 추가 (컬럼뿐만 아니라 제약조건도 수정 가능.)
 - ALTER => MODIFY, DROP, ADD
 
5. DROP: 테이블 완전 삭제
 - 형식 : DROP TABLE table명 

6. TRUNCATE: 테이블의 데이터만 삭제. (구조는 남겨놓음)
 - 형식 : TRUNCATE TABLE table명

7. RENAME: 테이블의 이름을 변경
 - 형식 : RENAME '이전 테이블명' TO '새 테이블명'
 
==================================================================================================================
<제약조건에 대한 이름 부여>
[emp 테이블]                   [dept 테이블]
    empno(사번) -PK              deptno(부서번호)
    ename(이름)                  dname(부서명)
    job(직업)                    loc(근무지)
    mgr(사수의 사번)               
    hiredate(입사일)
    sal(급여)
    comm(성과급)
    deptno(부서번호) -FK
 - pk: PRIMARY KEY => 제약조건 이름: 테이블명_컬럼명_pk ex) emp_empno_pk
 - fk: FOREIGN KEY => 제약조건 이름 ex) emp_deptno_fk
 - nn: NOT NULL => 제약조건 이름 ex) emp_ename_nn
 - ck: CHECK => 제약조건 이름 ex) emp_job_ck
 - uk: UNIQUE
 
==================================================================================================================
<명세표 작성 방법>
 - 2차 프로젝트에 들어갈 테이블 명세표 이달 말경 제출할 것. 
    1. emp 테이블 명세서 
    테이블명 (emp) 
    =======================================================================================================
    컬럼명         empno   ename     job                       mgr     hiredate    sal     comm    deptno
    =======================================================================================================
    pk/fk/uk      pk      nn                                          nn          nn              fk★       <== fk가 있으면 참조하고 있는 테이블을 먼저 만들어야. 
    =======================================================================================================
    참조테이블                                                                                      dept
    =======================================================================================================
    참조컬럼명                                                                                      deptno
    =======================================================================================================
    체크속성                         (영업부,개발부,총무부,기획부)   
    =======================================================================================================
    데이터형      NUMBER   VARCHAR2  VARCHAR2                  NUMBER   DATE        NUMBER  NUMBER  NUMBER
    =======================================================================================================
    크기          4       51          10                      4                    7,2     7,2     2
    =======================================================================================================
    
    2. dept 테이블 명세서 
    테이블명 (dept) 
    =======================================================================================================
    컬럼명         deptno   dename     loc                     
    =======================================================================================================
    pk/fk/uk      pk      nn                                         
    =======================================================================================================
    참조테이블                                                                                      
    =======================================================================================================
    참조컬럼명          
    =======================================================================================================
    체크속성                          
    =======================================================================================================
    데이터형      NUMBER   VARCHAR2  VARCHAR2                 
    =======================================================================================================
    크기          2       14        13                      
    =======================================================================================================
    
*/ 

/*
CREATE TABLE mydept(
    deptno NUMBER(4),
    dname VARCHAR2(51),
    loc VARCHAR2(10)
);
*/
--NOT NULL
CREATE TABLE mydept(
    deptno NUMBER(4),
    dname VARCHAR2(51) CONSTRAINT mydept_dname_nn NOT NULL,
    loc VARCHAR2(10) CONSTRAINT mydept_loc_nn NOT NULL,
    CONSTRAINT mydept_deptno_pk PRIMARY KEY(deptno)   /*PK 설정*/
);

CREATE TABLE myemp(
    empno NUMBER(4),
    ename VARCHAR2(51) CONSTRAINT myemp_enmae_nn NOT NULL,
    job VARCHAR2(10),
    mgr NUMBER(4),
    hiredate DATE CONSTRAINT myemp_hiredate_nn NOT NULL,
    sal NUMBER(7,2) CONSTRAINT myemp_sal_nn NOT NULL,
    comm NUMBER(7,2),
    deptno NUMBER(2),
    CONSTRAINT myemp_empno_pk PRIMARY KEY(empno),  /* PK 설정 */
    CONSTRAINT myemp_job_ck CHECK(job IN('영업부','개발부','총무부','기획부')),
    CONSTRAINT myemp_deptno_fk FOREIGN KEY(deptno) 
    REFERENCES mydept(deptno) /* REFERENCE'S'임!!ㅋㅋㅋㅋ*/
);

DESC mydept;
DESC myemp;
/*
    1 C => NOT NULL, CHECK
    2 P => PRIMARY KEY
    3 R => FOREIGN KEY
    => 생성되는 모든 테이브 ㄹ=>
*/
SELECT constraint_name,constraint_type
FROM user_constraints
WHERE table_name='MYEMP';

/*
ex1) 테이블 명세서가 아래와 같은 '전표상세' 테이블을 만들어라. (테이블명, 컬럼명 모두 한글로 만들어라.) 
    ==> #2.판매전표 또는 #3.제품 테이블이 #1.전표상세 테이블보다 먼저 만들어져야. (#1.전표상세 테이블이 나머지 두 테이블을 참조하니까)

    #1. (전표상세)
    ===================================================================
    컬럼명         전표번호    제품번호     수량      단가      금액                     
    ===================================================================
    pk/fk/uk      pk/fk     fk          nn       nn       nn                                         
    ===================================================================
    참조테이블      판매전표    제품                                                                                
    ===================================================================
    참조컬럼명      전표번호    제품번호
    ===================================================================
    체크속성                                                >0         
    ===================================================================
    데이터형       VARCHAR2   VARCHAR2  NUMBER     NUMBER   NUMBER         
    ===================================================================
    크기          12         12                              
    ===================================================================
    
    #2. (판매전표)
    ===================================================================
    컬럼명         전표번호    판매일자     고객명        총액                           
    ===================================================================
    pk/fk/uk      pk        nn         nn                      
    ===================================================================
    참조테이블                                                                                      
    ===================================================================
    참조컬럼명      
    ===================================================================
    체크속성                                          >0                  
    ===================================================================
    데이터형       VARCHAR2   DATE       VARCHAR2     NUMBER            
    ===================================================================
    크기          12                    51                             
    ===================================================================
    
    #3. (제품)
    ===================================================================
    컬럼명         제품번호    제품명     제품단가                       
    ===================================================================
    pk/fk/uk      pk        uk        nn        
    ===================================================================
    참조테이블                                                                                      
    ===================================================================
    참조컬럼명      
    ===================================================================
    체크속성                            >0                             
    ===================================================================
    데이터형       VARCHAR2   VARCHAR2  NUMBER             
    ===================================================================
    크기          12         100                              
    ===================================================================

    ※ CONSTRAINTS 제품_제품명_uk UNIQUE(제품명)
*/

--생성완료
CREATE TABLE 제품(
    제품번호 VARCHAR2(12),
    제품명 VARCHAR2(100),
    제품단가 NUMBER, 
    CONSTRAINT 제품_제품번호_pk PRIMARY KEY(제품번호), --NOT NULL을 제외한 조건들은 다 아래부분에 와야. 
    CONSTRAINT 제품_제품명_uk UNIQUE(제품명),
    CONSTRAINT 제품_제품단가_ck CHECK(제품단가>0)
);
--생성완료 
CREATE TABLE 판매전표(
    전표번호 VARCHAR2(12),
    판매일자 DATE CONSTRAINT 판매전표_판매일자_nn NOT NULL,
    고객명 VARCHAR2(51) CONSTRAINT 판매전표_고객명_nn NOT NULL,
    총액 NUMBER,
    CONSTRAINT 판매전표_전표번호_pk PRIMARY KEY(전표번호),
    CONSTRAINT 판매전표_총액 CHECK(총액>0)    
);
--생성완료
CREATE TABLE 전표상세(
    전표번호 VARCHAR2(12),
    제품번호 VARCHAR2(12),
    수량 NUMBER CONSTRAINT 전표상세_수량_nn NOT NULL,
    단가 NUMBER CONSTRAINT 전표상세_단가_nn NOT NULL,
    금액 NUMBER CONSTRAINT 전표상세_금액_nn NOT NULL,
    CONSTRAINT 전표상세_전표번호_pk PRIMARY KEY(전표번호),
    CONSTRAINT 전표상세_전표번호_fk FOREIGN KEY(전표번호)
    REFERENCES 판매전표(전표번호),
    CONSTRAINT 전표상세_제품번호_fk FOREIGN KEY(제품번호)
    REFERENCES 제품(제품번호),
    CONSTRAINT 전표상세_금액_ck CHECK(금액>0)
);

--ex1)에서 만든 테이블 삭제했음. 
DROP TABLE 전표상세;
DROP TABLE 제품;
DROP TABLE 판매전표;


-- ex2) 다시 ex1 테이블을 "제약조건 없이" 만든 뒤, 수정해서 제약조건 추가해라. 
CREATE TABLE 제품(
    제품번호 VARCHAR2(12),
    제품명 VARCHAR2(100),
    제품단가 NUMBER
);
CREATE TABLE 판매전표(
    전표번호 VARCHAR2(12),
    판매일자 DATE ,
    고객명 VARCHAR2(51) ,
    총액 NUMBER 
);
CREATE TABLE 전표상세(
    전표번호 VARCHAR2(12),
    제품번호 VARCHAR2(12),
    수량 NUMBER ,
    단가 NUMBER ,
    금액 NUMBER
);


--수정
ALTER TABLE 제품
ADD CONSTRAINT 제품_제품번호_pk PRIMARY KEY(제품번호);
--UNIQUE
ALTER TABLE 제품
ADD CONSTRAINT 제품_제품명_uk UNIQUE(제품명);
--NOT NULL 추가 
ALTER TABLE 제품
MODIFY 제품단가 CONSTRAINT 제품_제품단가_nn NOT NULL;
--제약조건들 'ADD CONSTRAINT'해서 추가 가능. 
--단, NOT NULL은 추가하는게 아니라 MOMDIFY해야 한다.

--수정2
ALTER TABLE 판매전표
MODIFY 판매일자 CONSTRAINT 판매전표_판매일자_nn NOT NULL;
ALTER TABLE 판매전표
MODIFY 고객명 CONSTRAINT 판매전표_고객명_nn NOT NULL;
ALTER TABLE 판매전표
ADD CONSTRAINT 판매전표_전표번호_pk PRIMARY KEY(전표번호); 
ALTER TABLE 판매전표
ADD CONSTRAINT 판매전표_총액 CHECK(총액>0);

--수정3
ALTER TABLE 전표상세
MODIFY 수량 CONSTRAINT 전표상세_수량_nn NOT NULL;
ALTER TABLE 전표상세
MODIFY 단가 CONSTRAINT 전표상세_단가_nn NOT NULL;
ALTER TABLE 전표상세
MODIFY 금액 CONSTRAINT 전표상세_금액_nn NOT NULL;
ALTER TABLE 전표상세
ADD CONSTRAINT 전표상세_전표번호_pk PRIMARY KEY(전표번호);
ALTER TABLE 전표상세
ADD CONSTRAINT 전표상세_전표번호_fk FOREIGN KEY(전표번호)
REFERENCES 판매전표(전표번호);
ALTER TABLE 전표상세
ADD CONSTRAINT 전표상세_제품번호_fk FOREIGN KEY(제품번호)
REFERENCES 제품(제품번호);
ALTER TABLE 전표상세
ADD CONSTRAINT 전표상세_금액_ck CHECK(금액>0);

--CONSTRAINT 확인하기 : Dictionary 
SELECT constraint_name,table_name,constraint_type
FROM user_constraints
WHERE table_name='전표상세';

/*
--ex3) 아래의 명세서 바탕으로 테이블을 만들어라.
    (freeboard)
    =================================================================================================
    컬럼명         no     email     name    subject     content     pwd     regdate     hit                       
    =================================================================================================
    pk/fk/uk      pk               nn      nn          nn          nn      default     default
    =================================================================================================
    참조테이블                                                                                      
    =================================================================================================
    참조컬럼명      
    =================================================================================================
    CHECK                                                     
    =================================================================================================
    데이터형       NUMBER  VARCHAR2  VARCHAR2 VARCHAR2   CLOB       VARCHAR2    DATE    NUMBER             
    =================================================================================================
    크기                    100        51     1000                  10
    =================================================================================================
    DEFAULT                                                                   SYSDATE    0
    =================================================================================================

    (freereply)
    =====================================================================================================================
    컬럼명         no     bno     id    name     msg     regdate     group_id     group_stap   group_tab   root    depth                       
    =====================================================================================================================
    pk/fk/uk      pk     fk     nn      nn      nn      default                     def         def       def       def
    =====================================================================================================================
    참조테이블             freeboard                                                                         
    =====================================================================================================================
    참조컬럼명             no
    =====================================================================================================================
    CHECK                                                     
    =====================================================================================================================
    데이터형       NUMBER  NUMBER  VARCHAR2 VARCHAR2   CLOB  DATE     NUMBER        NUMBER       NUMBER    NUMBER   NUMBER         
    =====================================================================================================================
    크기                             20       51                  
    =====================================================================================================================
    DEFAULT                                                                           0             0       0       0
    =====================================================================================================================
    
    ex. 답글형 게시판 만들기
    -----------------------------------------------------------------------------------------
                              no      group_id     group_step   group_tab   root    depth 
    AAAAAAAA                  1         1               0           0        0      1
        ┗ BBBBBBB            2         1               1           1        1      1
            ┗ CCCCCCC        3         1               2           2        2      0
        ┗ PPPPPPP            8          1               1          1        1      0   <== 뒤늦게 달린 답글 ==> groupt step 이 BBBB랑 똑같아서 구분이 안 됨 
    DDDDDDDD                  4         2               0           0        0      2
        ┗ KKKKKK             5         2               1           1        4      0
        ┗ PPPPPP             7         2               2           1        4      0
    FFFFFFFFF                 6         3               0           0        0      0
    -----------------------------------------------------------------------------------------
                                  no      group_id     group_step   group_tab   root    depth 
    AAAAAAAA                  1         1               0           0        0      1
        ┗ PPPPPPP            8          1               1          1        1      0   <== 뒤늦게 달린 답글 ==> 요렇게 되게 만든다....
        ┗ BBBBBBB            2         1               2★          1        1      1   <== 뒤늦게 달린 답글때문에 group_step 번호가 바뀜 
            ┗ CCCCCCC        3         1               3★           2        2      0  <== 뒤늦게 달린 답글때문에 group_step 번호가 바뀜 
    DDDDDDDD                  4         2               0           0        0      2
        ┗ KKKKKK             5         2               1           1        4      0
        ┗ PPPPPP             7         2               2           1        4      0
    FFFFFFFFF                 6         3               0           0        0      0
    
    depth: 자기 밑에 몇 개를 달고 있는지 
    root: 얘의 엄마글 번호(no). 
    group_tab: tab 몇 번 띄워야하는지...
    group_step: 같은 그룹 내에서 글의 순서...
*/
CREATE TABLE test(
    no NUMBER,
    id VARCHAR(20),
    name VARCHAR2(30) NOT NULL,
    CONSTRAINT test_no_id_pk PRIMARY KEY(no,id) --PK 두 개 만들었음...
);
DESC test;
ALTER TABLE test DROP CONSTRAINT test_no_id_pk; --PK 해제했음 ==> no과 id에서 NOT NULL이 사라졌음을 확인 가능.
DESC test;

-- 열 추가 시 맨 마지막에 추가된다.
ALTER TABLE test ADD regdate DATE DEFAULT SYSDATE;
DESC test; -- 위에서 만든 regdate가 맨 마지막에 추가된 것을 확인 가능.

--디폴트값이 있는 테이블에 데이터 집어넣기 
INSERT INTO test VALUES (1,'hong', '홍길동'); --컬럼 4개인데 3개 값만 줬음 ==> 안 들어감 
INSERT INTO test(no,id,name) VALUES (1,'hong', '홍길동'); --3개값에만 준다고 말하고 주면 들어감. 지정하지 않은 1개 값은 디폴트값이 들어감. 가장 일반적 방법. 
INSERT INTO test VALUES (1,'hong', '홍길동', SYSDATE); --아님 아예 첨부터 모든 컬럼에 다 값 넣어줌 
SELECT * FROM test;












