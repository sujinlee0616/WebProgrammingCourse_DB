package com.sist.manager;
import java.text.SimpleDateFormat;
import java.util.*;
import com.sist.vo.*;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import com.sist.dao.*;

public class MovieManager {
	
	// ===================================== Movie =====================================
	public ArrayList<MovieVO> movieListData()
	{
		ArrayList<MovieVO> list = new ArrayList<MovieVO>();
		MovieDAO dao = MovieDAO.newInstance(); //싱글톤 객체 생성 

		try {
			int k=1;
			//for(int i=1;i<=7;i++) // 페이지 수. 1페이지인 애는 주석처리. 
			{
				Document doc=Jsoup.connect("https://movie.daum.net/boxoffice/yearly").get();
				// Document doc=Jsoup.connect("https://movie.daum.net/boxoffice/yearly").get();
				// 긁는 애들 타입별로 밑에서 type 숫자 바꿔준다.
				Elements link=doc.select("div.info_tit a"); 
 
				for(int j=0;j<link.size();j++)
				{
					try {
						Element elem=link.get(j);	
						String mLink="https://movie.daum.net"+elem.attr("href"); // mLink에 영화 상세페이지 링크 저장  
						Document doc2 = Jsoup.connect(mLink).get(); //doc2는 URL(mLink)에 접속해 Document(HTML)를 가져온다. 
						 
						Element title=doc2.selectFirst("div.subject_movie strong.tit_movie"); 
						System.out.println(title.text());
						Element score= doc2.selectFirst("div.subject_movie em.emph_grade");
						System.out.println(score.text());
						Element genre=doc2.select("dl.list_movie dd.txt_main").get(0);  //dd.txt_main이 여러개 ==> get(#)로 가져왔음  
						System.out.println(genre.text());
						Element regdate=doc2.select("dl.list_movie dd.txt_main").get(1); 
						System.out.println(regdate.text());
						Element timeAndGrade=doc2.select("dl.list_movie dd").get(3); 
						System.out.println(timeAndGrade.text()); // 102분, 전체관람가  
						String temp=timeAndGrade.text();
						StringTokenizer st=new StringTokenizer(temp,","); 
						String strTime=st.nextToken();
						String strGrade=st.nextToken().trim();
						System.out.println(strTime);
						System.out.println(strGrade);						
						Element director=doc2.select("dl.list_movie dd.type_ellipsis").get(0);
						System.out.println(director.text());
						Element actor=doc2.select("dl.list_movie dd.type_ellipsis").get(1);
						System.out.println(actor.text());
						Element story=doc2.selectFirst("div.desc_movie p");
						System.out.println(story.text());
						Element poster=doc2.selectFirst("a.area_poster img.img_summary");
						
						MovieVO vo = new MovieVO();
						vo.setTitle(title.text());
						vo.setScore(Double.parseDouble(score.text()));
						vo.setGrade(strGrade);
						vo.setTime(strTime);
						vo.setActor(actor.text());
						vo.setDirector(director.text());
						vo.setGenre(genre.text());
						vo.setRegdate(regdate.text());
						vo.setStory(story.text());
						vo.setPoster(poster.attr("src"));
						vo.setType(5);
						
						dao.movieInsert(vo);
						
						// 데이터 몇 개 들어갔는지 확인
						System.out.println("k="+k);
						k++;
						
					} catch (Exception ex) {}				
					
				}
			}
			System.out.println("DataBase Insert End....");
		} catch (Exception ex) {}
		return list;
		
	}
	
	/*
	 *뉴스데이터
	 * <ul class="list_line #list">
		<li>
			<a href="http://v.movie.daum.net/v/20200218165207877" class="thumb_line bg_noimage2 @1">
				<span class="thumb_img" style="background-image:url(//img1.daumcdn.net/thumb/S320x200/?fname=https://t1.daumcdn.net/news/202002/18/starnews/20200218165207830ydsf.jpg);"></span>
			</a>
				<span class="cont_line">
					<strong class="tit_line"><a href="http://v.movie.daum.net/v/20200218165207877" class="link_txt @1">유아인·공효진, 코로나19로 버버리 패션쇼 입장 금지? "사실무근" </a></strong>
					<a href="http://v.movie.daum.net/v/20200218165207877" class="desc_line @1">
						[스타뉴스 김미화 기자]유아인, 공효진 / 사진=스타뉴스 배우 유아인 공효진 등이 코로나19 여파로 영국 버버리 패션쇼 참석을 거부당했다는 보도가 나온 가운데 양쪽 배우 모두 "사실이 아니다"라는 입장을 밝혔다. 18일 한 매체는 배우 유아인 공효진이 17일 영국 런던에서 열린 버버리 컬렉션 쇼에 참석할 예정이었으나, 코로나19 안전 대책이 마련되지 않아
					</a>
					<span class="state_line">
						스타뉴스<span class="txt_dot">・</span><span class="screen_out">발행일자</span>20.02.18
					</span>
				</span>
			</li>
	 */
	
	// ===================================== News =====================================
	public ArrayList<NewsVO> newsAllData()
	{
		ArrayList<NewsVO> list = new ArrayList<NewsVO>();
		Date date=new Date();
		SimpleDateFormat sdf=new SimpleDateFormat("yyyyMMdd");
		String today=sdf.format(date);
		
		try 
		{			
			for(int i=1;i<=18;i++) //총 18페이지니까
			{
				Document doc = Jsoup.connect("https://movie.daum.net/magazine/new?tab=nws&regdate="+today+"&page="+i).get(); 
				// Document: HTML 가져온다.
				// doc: https://movie.daum.net/magazine/new에서 소스보기 하면 나오는 HTML들이 저장됨.
				// https://movie.daum.net/magazine/new?tab=nws&regdate=20200218&page=4 
				
				Elements title=doc.select("ul.list_line strong.tit_line a");
				Elements poster=doc.select("ul.list_line a.thumb_line span.thumb_img");
				Elements link=doc.select("ul.list_line strong.tit_line a");
				// temp는 작성자와 등록일을 동시에 가지고 있음 
				Elements temp=doc.select("span.cont_line span.state_line");
				Elements content=doc.select("span.cont_line a.desc_line");
				
				for(int j=0;j<title.size();j++)
				{
					System.out.println(title.get(j).text());
					
					String ss=poster.get(j).attr("style"));
					System.out.println(poster.get(j).attr("style"));
					System.out.println(ss.indexOf("(")+1, ss.last);
					
					System.out.println(link.get(j).attr("href"));
					// temp를 작성자와 등록일로 나누기 
					// 뉴스엔・발행일자20.02.18
					String str=temp.get(j).text();
					String author=str.substring(0, str.indexOf("・"));
					String regdate=str.substring(str.lastIndexOf("자")+1);
					System.out.println(author);
					System.out.println(regdate);
					System.out.println(temp.get(j).text());
					System.out.println(content.get(j).text());
					System.out.println("================================");
				}
			}
					
		} 
		catch (Exception ex) {
			System.out.println(ex.getMessage());
		}
		
		return list;
	}
	
	public static void main(String[] args) {
		MovieManager m = new MovieManager();
		m.newsAllData();
	}

}
